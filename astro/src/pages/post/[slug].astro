---
import { sanityClient } from "sanity:client";
import { urlForImage } from '../../sanity/urlForImage';
import Image from "astro/components/Image.astro";
import dynamicViteAssetImport from '../../lib/dynamicViteAssetImport';
export async function getStaticPaths() {
  const posts = await sanityClient.fetch(`*[_type == "painting"]`);
  return posts.map((post: any) => {
    return {
      params: { slug: post.slug.current },
      props: { ...post },
    };
  });
}
function localImagePath(url: string) {
  const filename = url.split('/').pop();
  return `src/assets/${filename}`;
}
const { slug } = Astro.params;
const { title, dateProduced, mainImage, additionalImages }: { title: string, dateProduced: string, mainImage: any, additionalImages: any } = Astro.props;
const url = localImagePath(urlForImage(mainImage).url());

const additionalImagesArr = additionalImages.map((image: any) => {
  return localImagePath(urlForImage(image).url());
})
---

<h1>{title}</h1>
<Image src={dynamicViteAssetImport(url)} alt={title} />
<div>
  {additionalImagesArr.map((image: string) => (
    <Image src={dynamicViteAssetImport(image)} alt={title} />
  ))}
</div>